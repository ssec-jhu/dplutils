# This can be run and tested using ``tox run``.

[tox]
envlist =
    check-{style,security}
    format
    test
    build-{docs,dist}

[testenv:check-style]
description = check code style
skip_install = true
deps =
    -r requirements/build.txt
commands =
    ruff format . --check {posargs}
    ruff check . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
skip_install = true
deps =
    -r requirements/build.txt
commands =
    bandit --severity-level=medium -r dplutils

[testenv:format]
description = format code and sort imports using ruff
skip_install = true
deps =
    -r requirements/build.txt
commands =
    ruff format . {posargs}
    ruff check --select I --fix . {posargs}

[testenv]
description = run tests
passenv = *
extras = dev
deps =
    -r requirements/prd.txt
    -r requirements/test.txt
commands=
    pytest --cov --cov-report=html:coverage.html --cov-report=xml:coverage.xml {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
deps =
    -r requirements/docs.txt
allowlist_externals=make
change_dir = docs
commands = make clean html latex epub

[testenv:build-dist]
description = build
skip_install = true
deps =
    -r requirements/build.txt
commands =
    python -m build
