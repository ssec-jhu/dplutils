name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint:
    name: lint with ruff with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements/dev.txt
        shell: bash
      - name: Lint
        run: tox -e check-style
        shell: bash

  check-security:
    name: Check security for ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements/dev.txt
        shell: bash
      - name: Security check
        run: tox -e check-security
        shell: bash

  test:
    name: pytests on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest, macos-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
      with:
          lfs: true
    - uses: actions/setup-python@v4
      with:
          python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements/dev.txt
      shell: bash -l {0}
    - name: Test with tox
      run: |
        tox -e test
    - name: Archive coverage report
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report-python${{ matrix.python-version }}-${{ matrix.os }}
        path: coverage.html
        retention-days: 14
        if-no-files-found: error
#    - name: Upload coverage to Codecov
#      uses: codecov/codecov-action@v3
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        directory: ./coverage/reports/
#        env_vars: OS,PYTHON
#        fail_ci_if_error: true
#        files: ./coverage.xml
#        flags: unittests
#        name: codecov-umbrella
#        verbose: true

  docs:
    name: Build docs with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements/dev.txt
        shell: bash
      - name: Build sphinx docs.
        run: tox -e build-docs
        shell: bash
